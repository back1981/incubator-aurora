/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.aurora.gen;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

/**
 * Defines the required lock validation level.
 */
public enum LockValidation implements org.apache.thrift.TEnum {
  /**
   * The lock must be valid in order to be released.
   */
  CHECKED(0),
  /**
   * The lock will be released without validation (aka "force release").
   */
  UNCHECKED(1);

  private final int value;

  private LockValidation(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static LockValidation findByValue(int value) { 
    switch (value) {
      case 0:
        return CHECKED;
      case 1:
        return UNCHECKED;
      default:
        return null;
    }
  }
}
